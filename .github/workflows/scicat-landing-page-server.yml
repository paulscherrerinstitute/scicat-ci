name: scicat-landing-page-server

on:  
  workflow_dispatch: 
    inputs:
      submodule_commit:
        description: 'Commit of the submodule to deploy'     
        required: false
      commit: 
        description: 'Commit of the CI repo to deploy'     
        required: false
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:

  set_env: 
    uses: ./.github/workflows/reusable.environment.yml
    with: 
      commit: ${{ github.event.inputs.commit }}
      submodule_commit: ${{ github.event.inputs.submodule_commit }}

  check_changed:
    needs: set_env
    uses: ./.github/workflows/reusable.changes.yml
    with: 
      files: | 
        .github/workflows/scicat-landing-page-server.yml
        helm/configs/landing-page-server/${{ needs.set_env.outputs.environment }}/**
        helm/configs/landing-page-server/values.yaml
        landing-page-server/**
      commit: ${{ needs.set_env.outputs.commit }}
      submodule_commit: ${{ github.event.inputs.submodule_commit }}
      submodule: landing-page-server

  build_deploy_scicat_landing_page:
    if: (needs.check_changed.outputs.changed == 'true' && !needs.set_env.outputs.component) || needs.set_env.outputs.component == 'lp'
    needs: 
     - check_changed
     - set_env
    uses: ./.github/workflows/reusable.build-deploy.yml
    with:
      context: landing-page-server/.
      image_name: ${{ github.repository }}/landing-page-server
      release_name: landing-page-server
      tag: ${{ needs.set_env.outputs.tag }}
      environment: ${{ needs.set_env.outputs.environment }}
      commit: ${{ needs.set_env.outputs.commit }}
      submodule_commit: ${{ github.event.inputs.submodule_commit }}
      submodule: landing-page-server
      helm_set_files: >-
        CONFIG=helm/configs/landing-page-server/${{ needs.set_env.outputs.environment }}/config.json
        FAVICON=helm/configs/landing-page-server/favicon.ico
    secrets:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      JSON_SECRETS: ${{ toJSON(secrets) }}
      BASTION_USER: ${{ secrets.BASTION_USER }}
      BASTION_SSH_KEY: ${{ secrets.BASTION_SSH_KEY }}
