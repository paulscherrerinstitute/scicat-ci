name: set-environment

on:
  workflow_call:
    inputs: 
      submodule_commit: 
        description: commit of the submodule to deploy on workflow dispatch
        required: false
        type: string
      commit: 
        description: commit of the CI repo to deploy on workflow dispatch
        required: false
        type: string
    outputs:
      tag:
        description: tag of the docker image
        value: ${{ jobs.set_env.outputs.tag }}
      environment:
        description: environment based on workflow trigger
        value: ${{ jobs.set_env.outputs.environment }}
      component:
        description: Based on tag prefix, it extracts the component released
        value: ${{ jobs.set_env.outputs.component }}
      commit:
        description: Commit when using workflow dispatch
        value: ${{ jobs.set_env.outputs.commit }}
        
jobs:

  set_env:
    name: Output
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.variables.outputs.tag }}
      environment: ${{ steps.variables.outputs.environment }}
      component: ${{ steps.variables.outputs.component }}
      commit: ${{ steps.variables.outputs.commit }}
    steps:
      - id: variables
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            tag="sha-${{ github.event.pull_request.head.sha }}"
            environment=development 
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            input_commit=${{ inputs.commit }}
            commit=${input_commit:-${{ github.sha }}}
            submodule_append=$([ -z ${{ inputs.submodule_commit }} ] || echo "_sha-${{ inputs.submodule_commit }}" && echo "")
            tag="sha-$commit$submodule_append"
            environment=development
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
              tag="sha-${{ github.sha }}"
              environment=qa
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            tag="${{ github.event.release.tag_name }}"
            environment=production
            component=${tag:0:2}
          fi
          {
            echo "tag=$tag";
            echo "environment=$environment";
            echo "component=$component";
            echo "commit=$commit";
          } >> "$GITHUB_OUTPUT"
