name: changes

on:
  workflow_call:
    inputs:
      files:
        required: true
        type: string
      main:
        required: false
        type: string
        default: main
      submodule_commit: 
        description: commit of the submodule to deploy on workflow dispatch
        required: false
        type: string
      commit: 
        description: commit of the CI repo to deploy on workflow dispatch
        required: false
        type: string
      submodule: 
        description: name of the submodule folder
        required: false
        type: string
    outputs:
      changed:
        description: boolean to check if changes on input files
        value: ${{ jobs.changed.outputs.changed }}
    secrets: 
      SSH_PRIVATE_KEY: 
        description: ssh key to private submodule
        required: false

jobs:
  changed:
  
    runs-on: ubuntu-latest
    name: Check changed-files
    outputs:
      changed: ${{ steps.changed-files.outputs.any_modified }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ref: ${{ inputs.commit }}
      - run: |
          current_commit=`git rev-parse HEAD`;
          checkout_branch=`[[ $(git rev-parse --abbrev-ref HEAD) == "${{ inputs.main }}" ]] && echo "HEAD^" || echo "${{ inputs.main }}"`;
          git checkout $checkout_branch && git submodule update --recursive;
          git checkout $current_commit && git submodule update --recursive;

      - if: ${{ inputs.submodule_commit }}
        uses: paulscherrerinstitute/scicat-ci/.github/actions/checkout-submodule@main
        with: 
          submodule_commit: ${{ inputs.submodule_commit }}
          commit: ${{ inputs.commit }}
          submodule: ${{ inputs.submodule }}

      - if: ${{ inputs.submodule_commit }}
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          push: false
      
      - if: github.event_name == 'workflow_dispatch'
        id: shas
        run: | 
          echo "::set-output name=sha::$(git rev-parse HEAD)"
          echo "::set-output name=base_sha::$(git rev-parse ${{ inputs.main }})"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v17.3
        with: 
          files: ${{ inputs.files }}
          base_sha: ${{ steps.shas.outputs.base_sha }}
          sha: ${{ steps.shas.outputs.sha }}
